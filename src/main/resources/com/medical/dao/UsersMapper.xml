<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.medical.dao.UsersMapper">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.medical.po.Users">
        <result column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="userrole" property="userrole" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="mobilephone" property="mobilephone" jdbcType="VARCHAR"/>
        <result column="work_no" property="work_no" jdbcType="VARCHAR"/>
        <result column="u_status" property="u_status" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        id,
        username,
        password,
        name,
        userrole,
        email,
        telephone,
        mobilephone,
        work_no,
        u_status,
        remark
    </sql>

    <!--增加一个用户，id在数据库自增在这里不进行插入-->
    <insert id="insert" parameterType="Users">
        INSERT INTO users (
            username,
            password,
            name,
            email,
            telephone,
            mobilephone,
            work_no,
            u_status,
            remark
        ) VALUES (
            #{users.username,jdbcType=VARCHAR},
            #{users.password,jdbcType=VARCHAR},
            #{users.name,jdbcType=VARCHAR},
            #{users.email,jdbcType=VARCHAR},
            #{users.telephone,jdbcType=VARCHAR},
            #{users.mobilephone,jdbcType=VARCHAR},
            #{users.work_no,jdbcType=VARCHAR},
            #{users.u_status,jdbcType=VARCHAR},
            #{users.remark,jdbcType=VARCHAR}
        )
    </insert>

    <!--删除一个用户-->
    <delete id="deleteUserByUsername" parameterType="String">
        DELETE FROM users
        WHERE username = #{username,jdbcType=VARCHAR}
    </delete>

    <!--更新(学生)用户信息-->
    <update id="updateUsersByUsername" parameterType="Users">
        UPDATE users
        <set>
            <if test="users.password != null"> password= #{users.password,jdbcType=VARCHAR},</if>
            <if test="users.name != null"> name= #{users.name,jdbcType=VARCHAR},</if>
            <if test="users.email != null"> email= #{users.email,jdbcType=VARCHAR},</if>
            <if test="users.telephone != null"> telephone= #{users.telephone,jdbcType=VARCHAR},</if>
            <if test="users.mobilephone != null"> mobilephone= #{users.mobilephone,jdbcType=VARCHAR},</if>
            <if test="users.remark != null"> remark= #{users.remark,jdbcType=VARCHAR}</if>
        </set>
        WHERE username = #{users.username,jdbcType=VARCHAR}
    </update>

    <!--查询一个用户通过登录账号-->
    <select id="findUserByUsername" parameterType="String" resultType="Users">
        SELECT * FROM users
        WHERE username = #{username,jdbcType=VARCHAR}
    </select>

    <!--查询一个学生用户通过登录账号-->
    <select id="findStudentByUsername" parameterType="String" resultType="Users">
        SELECT * FROM users
        WHERE username = #{username,jdbcType=VARCHAR}
        AND userrole = '学生'
    </select>

    <!--查询 admin 通过登录账号-->
    <select id="findAdminByUsername" parameterType="String" resultType="Users">
          SELECT * FROM users
          WHERE username = #{username,jdbcType=VARCHAR}
          AND userrole = '管理员'
    </select>

</mapper>

