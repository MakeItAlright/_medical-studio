<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <!--扫描服务组件-->
  <context:component-scan base-package="com.medical.service"/>

  <!--aop的配置-->

  <!-- 配置SecurityManager -->
  <!--class 写错成 DefaultSecurityManager 导致BeanInitializationException: The security manager does not implement the WebSecurityManager interface.-->
  <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    <property name="cacheManager" ref="cacheManager" />
    <property name="authenticator" ref="authenticator" />
    <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
    <property name="realms">
      <list>
        <ref bean="userRealm"/>
        <ref bean="workerRealm"/>
        <ref bean="adminRealm"/>
      </list>
    </property>
  </bean>

  <!-- 配置CacheManager -->
  <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    <property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
  </bean>

  <!-- 实现多Realm认证 -->
  <bean id="authenticator" class="com.medical.shiro.realm.CustomizedRealmAuthenticator">
    <property name="authenticationStrategy">
      <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>
    </property>
  </bean>

  <!--自定义会话管理配置-->
  <!--<bean id="sessionManager" class="com.medical.shiro.session.UserSessionManager">-->
      <!--<property name="sessionDAO" ref="sessionDAO"/>-->

      <!--&lt;!&ndash; 会话超时时间，单位：毫秒  &ndash;&gt;-->
      <!--<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>-->

      <!--&lt;!&ndash; 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   &ndash;&gt;-->
      <!--<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>-->
      <!--&lt;!&ndash;          <property name="sessionValidationSchedulerEnabled" value="false"/> &ndash;&gt;-->
      <!--<property name="sessionValidationSchedulerEnabled" value="true"/>-->
      <!--<property name="sessionIdCookie" ref="sessionIdCookie"/>-->
      <!--<property name="sessionIdCookieEnabled" value="true"/>-->
  <!--</bean>-->

  <!-- 指定 SESSIONID,默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
        当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
  <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
    <!--<constructor-arg name="name" value="shiro.session.id"/>-->
  <!--</bean>-->

  <!-- 配置realm -->
  <!-- Define the realm you want to use to connect to your back-end security datasource: -->
  <bean id="userRealm" class="com.medical.shiro.realm.UserRealm">
    <!--配置密码匹配器 -->
    <!--<property name="credentialsMatcher">-->
      <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
        <!--&lt;!&ndash; 加密算法为MD5 &ndash;&gt;-->
        <!--<property name="hashAlgorithmName" value="MD5"></property>-->
        <!--&lt;!&ndash; 加密次数 &ndash;&gt;-->
        <!--<property name="hashIterations" value="1024"></property>-->
      <!--</bean>-->
    <!--</property>-->
  </bean>
  <bean id="workerRealm" class="com.medical.shiro.realm.WorkerRealm">
    <!-- 配置密码匹配器 -->
    <!--<property name="credentialsMatcher">-->
      <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
        <!--&lt;!&ndash; 加密算法为MD5 &ndash;&gt;-->
        <!--<property name="hashAlgorithmName" value="MD5"></property>-->
        <!--&lt;!&ndash; 加密次数 &ndash;&gt;-->
        <!--<property name="hashIterations" value="1024"></property>-->
      <!--</bean>-->
    <!--</property>-->
  </bean>
  <bean id="adminRealm" class="com.medical.shiro.realm.AdminRealm">
    <!-- 配置密码匹配器 -->
    <!--<property name="credentialsMatcher">-->
      <!--<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
        <!--&lt;!&ndash; 加密算法为MD5 &ndash;&gt;-->
        <!--<property name="hashAlgorithmName" value="MD5"></property>-->
        <!--&lt;!&ndash; 加密次数 &ndash;&gt;-->
        <!--<property name="hashIterations" value="1024"></property>-->
      <!--</bean>-->
    <!--</property>-->
  </bean>

  <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    <property name="securityManager" ref="securityManager"/>
    <!--<property name="filterChainDefinitions">-->
      <!--<value>-->
        <!--&lt;!&ndash;# some example chain definitions:&ndash;&gt;-->
        <!--&lt;!&ndash;&lt;!&ndash;/logout = logout&ndash;&gt;m&ndash;&gt;-->
        <!--/ = anon-->
        <!--/** = authc-->
        <!--&lt;!&ndash;# more URL-to-FilterChain definitions here&ndash;&gt;-->
      <!--</value>-->
    <!--</property>-->
  </bean>

  <!-- 自定义调用配置在Spring IOC容器中shiro bean的生命周期方法 -->
  <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

  <!--&lt;!&ndash; 在IOC容器中使用shiro的注解，但必须在配置了LifecycleBeanPostProcessor之后才可以使用 &ndash;&gt;-->
  <!--<bean-->
  <!--class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"-->
  <!--depends-on="lifecycleBeanPostProcessor" />-->
  <!--<bean-->
  <!--class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">-->
  <!--<property name="securityManager" ref="securityManager" />-->
  <!--</bean>-->

</beans>
